"""Enhance subscription models: add billing_interval_days, trial_days, next_billing_date, is_urgent etc.

Revision ID: c6fdc59becac
Revises: 039c95a93bc4
Create Date: 2025-07-17 14:23:04.166939

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'c6fdc59becac'
down_revision = '039c95a93bc4'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('daycare_subscriptions', schema=None) as batch_op:
        batch_op.add_column(sa.Column('next_billing_date', sa.Date(), nullable=True))
        batch_op.add_column(sa.Column('cancellation_reason', sa.Text(), nullable=True))
        batch_op.drop_column('cancelled_reason')

    with op.batch_alter_table('daycares', schema=None) as batch_op:
        batch_op.alter_column('subscription_plan',
               existing_type=postgresql.ENUM('basic', 'standard', 'premium', name='subscription_plan_enum '),
               type_=postgresql.ENUM('basic', 'standard', 'premium', name='subscription_plans'),
               existing_nullable=True,
               postgresql_using="subscription_plan::text::subscription_plans"
        )

    with op.batch_alter_table('subscription_notifications', schema=None) as batch_op:
        batch_op.add_column(sa.Column('is_read', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('is_urgent', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('scheduled_for', sa.DateTime(), nullable=True))

    with op.batch_alter_table('subscription_plans', schema=None) as batch_op:
        batch_op.add_column(sa.Column('billing_interval_days', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('trial_days', sa.Integer(), nullable=True))

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('subscription_plans', schema=None) as batch_op:
        batch_op.drop_column('trial_days')
        batch_op.drop_column('billing_interval_days')

    with op.batch_alter_table('subscription_notifications', schema=None) as batch_op:
        batch_op.drop_column('scheduled_for')
        batch_op.drop_column('is_urgent')
        batch_op.drop_column('is_read')

    with op.batch_alter_table('daycares', schema=None) as batch_op:
        batch_op.alter_column('subscription_plan',
               existing_type=sa.ENUM('basic', 'standard', 'premium', name='subscription_plans'),
               type_=postgresql.ENUM('basic', 'standard', 'premium', name='subscription_plan_enum'),
               existing_nullable=True)

    with op.batch_alter_table('daycare_subscriptions', schema=None) as batch_op:
        batch_op.add_column(sa.Column('cancelled_reason', sa.VARCHAR(length=500), autoincrement=False, nullable=True))
        batch_op.drop_column('cancellation_reason')
        batch_op.drop_column('next_billing_date')

    # ### end Alembic commands ###
